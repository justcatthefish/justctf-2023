# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: oracle.proto

import sys
_b=sys.version_info[0]<3 and (lambda x:x) or (lambda x:x.encode('latin1'))
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
from google.protobuf import descriptor_pb2
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()




DESCRIPTOR = _descriptor.FileDescriptor(
  name='oracle.proto',
  package='',
  syntax='proto3',
  serialized_pb=_b('\n\x0coracle.proto\"\x06\n\x04Void\"\'\n\x04Task\x12\x10\n\x08question\x18\x01 \x01(\t\x12\r\n\x05token\x18\x02 \x01(\t\"/\n\x0cTaskResponse\x12\x10\n\x08response\x18\x01 \x01(\t\x12\r\n\x05token\x18\x02 \x01(\t\"\x1c\n\nTaskResult\x12\x0e\n\x06result\x18\x01 \x01(\t2V\n\x06Oracle\x12\x1f\n\x0fgenerateNewTask\x12\x05.Void\x1a\x05.Task\x12+\n\rcheckResponse\x12\r.TaskResponse\x1a\x0b.TaskResultb\x06proto3')
)




_VOID = _descriptor.Descriptor(
  name='Void',
  full_name='Void',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=16,
  serialized_end=22,
)


_TASK = _descriptor.Descriptor(
  name='Task',
  full_name='Task',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='question', full_name='Task.question', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='token', full_name='Task.token', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=24,
  serialized_end=63,
)


_TASKRESPONSE = _descriptor.Descriptor(
  name='TaskResponse',
  full_name='TaskResponse',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='response', full_name='TaskResponse.response', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='token', full_name='TaskResponse.token', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=65,
  serialized_end=112,
)


_TASKRESULT = _descriptor.Descriptor(
  name='TaskResult',
  full_name='TaskResult',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='result', full_name='TaskResult.result', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=114,
  serialized_end=142,
)

DESCRIPTOR.message_types_by_name['Void'] = _VOID
DESCRIPTOR.message_types_by_name['Task'] = _TASK
DESCRIPTOR.message_types_by_name['TaskResponse'] = _TASKRESPONSE
DESCRIPTOR.message_types_by_name['TaskResult'] = _TASKRESULT
_sym_db.RegisterFileDescriptor(DESCRIPTOR)

Void = _reflection.GeneratedProtocolMessageType('Void', (_message.Message,), dict(
  DESCRIPTOR = _VOID,
  __module__ = 'oracle_pb2'
  # @@protoc_insertion_point(class_scope:Void)
  ))
_sym_db.RegisterMessage(Void)

Task = _reflection.GeneratedProtocolMessageType('Task', (_message.Message,), dict(
  DESCRIPTOR = _TASK,
  __module__ = 'oracle_pb2'
  # @@protoc_insertion_point(class_scope:Task)
  ))
_sym_db.RegisterMessage(Task)

TaskResponse = _reflection.GeneratedProtocolMessageType('TaskResponse', (_message.Message,), dict(
  DESCRIPTOR = _TASKRESPONSE,
  __module__ = 'oracle_pb2'
  # @@protoc_insertion_point(class_scope:TaskResponse)
  ))
_sym_db.RegisterMessage(TaskResponse)

TaskResult = _reflection.GeneratedProtocolMessageType('TaskResult', (_message.Message,), dict(
  DESCRIPTOR = _TASKRESULT,
  __module__ = 'oracle_pb2'
  # @@protoc_insertion_point(class_scope:TaskResult)
  ))
_sym_db.RegisterMessage(TaskResult)



_ORACLE = _descriptor.ServiceDescriptor(
  name='Oracle',
  full_name='Oracle',
  file=DESCRIPTOR,
  index=0,
  options=None,
  serialized_start=144,
  serialized_end=230,
  methods=[
  _descriptor.MethodDescriptor(
    name='generateNewTask',
    full_name='Oracle.generateNewTask',
    index=0,
    containing_service=None,
    input_type=_VOID,
    output_type=_TASK,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='checkResponse',
    full_name='Oracle.checkResponse',
    index=1,
    containing_service=None,
    input_type=_TASKRESPONSE,
    output_type=_TASKRESULT,
    options=None,
  ),
])
_sym_db.RegisterServiceDescriptor(_ORACLE)

DESCRIPTOR.services_by_name['Oracle'] = _ORACLE

# @@protoc_insertion_point(module_scope)
